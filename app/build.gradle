plugins {
    id 'com.android.application'
    id 'jacoco' // Apply Jacoco plugin
}

jacoco {
    toolVersion = "0.8.11"
}

android {
    compileSdk 32
    defaultConfig {
        applicationId "edu.uiuc.cs427app"
        minSdk 29
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testOptions {
            unitTests.all {
                // The includeNoLocationClasses setting is now moved to the tasks.withType(Test) section below
            }
        }
        sourceSets {
            main {
                java.srcDirs = ['src/main/java']
            }
            androidTest {
                java.srcDirs = ['src/androidTest/java']
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['connectedAndroidTest', 'testDebugUnitTest']) {
    reports {
        xml.enabled = true
        html.enabled = true
    }
    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/javac/debug/classes", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"
    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec", "outputs/code-coverage/connected/*/coverage.ec"
    ]))
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.navigation:navigation-fragment:2.3.5'
    implementation 'androidx.navigation:navigation-ui:2.3.5'
    implementation 'com.android.volley:volley:1.2.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Jacoco and other testing dependencies
    androidTestImplementation 'org.jacoco:org.jacoco.agent:0.8.7'
    androidTestImplementation 'org.mockito:mockito-core:3.11.2'
    androidTestImplementation 'org.mockito:mockito-android:3.11.2'
    testImplementation 'org.mockito:mockito-core:2.28.2'
    implementation 'net.bytebuddy:byte-buddy:1.14.0'
    testImplementation 'org.mockito:mockito-inline:2.28.2'

    // Espresso dependencies for UI Testing
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-accessibility:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.4.0'
    androidTestImplementation 'androidx.test.espresso.idling:idling-concurrent:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-idling-resource:3.4.0'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
}

// JaCoCo configuration to exclude 'jdk.internal.*' classes
tasks.withType(Test) {
    jacoco {
        includeNoLocationClasses = true
        excludes = ['jdk.internal.*']
    }
}
